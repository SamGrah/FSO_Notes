{"version":3,"sources":["components/Note.js","services/NotesService.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseURL","getAll","a","axios","get","res","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","toggleImportanceOf","find","changedNote","noteService","response","map","useEffect","notesData","console","log","length","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","notesToShow","filter","onSubmit","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wOAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,sBAAwB,iBAE5B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCNpCI,EAAU,aAiBD,GAAEC,OAfL,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAIJ,GADf,cACPK,EADO,yBAENA,EAAIC,MAFE,2CAAH,qDAeaC,OAVb,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACKC,IAAMM,KAAKT,EAASQ,GADzB,cACPH,EADO,yBAENA,EAAIC,MAFE,2CAAH,sDAUqBI,OALrB,uCAAG,WAAOC,EAAIH,GAAX,eAAAN,EAAA,sEACKC,IAAMS,IAAN,UAAaZ,EAAb,YAAwBW,GAAMH,GADnC,cACPH,EADO,yBAENA,EAAIC,MAFE,2CAAH,yDCwDGO,EAlEH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,uCAAG,WAAOV,GAAP,mBAAAT,EAAA,6DACnBR,EAAOqB,EAAMO,MAAK,SAAA5B,GAAI,OAAIA,EAAKiB,KAAOA,KACtCY,EAFmB,2BAEA7B,GAFA,IAEMG,WAAYH,EAAKG,YAFvB,SAIF2B,EAAYd,OAAOC,EAAIY,GAJrB,OAInBE,EAJmB,OAKzBT,EAASD,EAAMW,KAAI,SAAAhC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO+B,MAL1B,2CAAH,sDASxBE,qBAAU,WACR,sBAAC,4BAAAzB,EAAA,sEACuBsB,EAAYvB,SADnC,OACK2B,EADL,OAECZ,EAASY,GAFV,0CAAD,KAIC,IACHC,QAAQC,IAAI,SAAUf,EAAMgB,OAAQ,SAEpC,IAAMC,EAAO,uCAAG,WAAOC,GAAP,iBAAA/B,EAAA,6DACd+B,EAAMC,iBACAC,EAAa,CACjBrC,QAASmB,EACTmB,MAAM,IAAIC,MAAOC,cACjBzC,UAAW0C,KAAKC,SAAW,GAC3B7B,GAAII,EAAMgB,OAAS,GANP,SASYP,EAAYjB,OAAO4B,GAT/B,OASRM,EATQ,OAUdzB,EAASD,EAAM2B,OAAOD,IACtBvB,EAAW,IAXG,2CAAH,sDAmBPyB,EAAcxB,EAAUJ,EAAQA,EAAM6B,QAAO,SAAAlD,GAAI,OAAIA,EAAKG,aAEhE,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMqB,GAAYD,IAAnC,kBACSA,EAAU,YAAc,WAGnC,6BACGwB,EAAYjB,KAAI,SAAAhC,GAAI,OACjB,cAAC,EAAD,CACMA,KAAMA,EACNC,iBAAkB,kBAAM0B,EAAmB3B,EAAKiB,MAF3CjB,EAAKiB,SAKtB,uBAAMkC,SAAUb,EAAhB,UACE,uBAAOc,MAAO7B,EAAS8B,SAvBJ,SAACd,GACxBJ,QAAQC,IAAIG,EAAMe,OAAOF,OACzB5B,EAAWe,EAAMe,OAAOF,UAsBlB,wBAAQG,KAAK,SAAb,yBC9DVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5148cc7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make note important' : 'make important'\n\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\nimport axios from 'axios'\n\nconst baseURL = '/api/notes'\n\nconst getAll = async () => {\n  const res = await axios.get(baseURL)\n  return res.data \n}\n\nconst create = async (newObject) => {\n  const res = await axios.post(baseURL, newObject)\n  return res.data\n}\n\nconst update = async (id, newObject) => {\n  const res = await axios.put(`${baseURL}/${id}`, newObject)\n  return res.data\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react' \nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/NotesService'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const toggleImportanceOf = async (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    const response = await noteService.update(id, changedNote)\n    setNotes(notes.map(note => note.id !== id ? note : response))\n  }\n\n\n  useEffect(() => {\n    (async () => {\n      let notesData = await noteService.getAll()\n      setNotes(notesData)\n    })()\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = async (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote, \n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1 \n    }\n\n    const createdNote = await noteService.create(noteObject) \n    setNotes(notes.concat(createdNote))\n    setNewNote('')\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show { showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} \n                  note={note} \n                  toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n          <button type='submit'>save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}